name: PR Checker

on:
  pull_request:
    types: [opened, edited, ready_for_review, reopened, synchronize]

permissions:
  pull-requests: write

jobs:
  check_commit_name_in_pr:
    if: ${{ !github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: Check Commits
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });

            const regex = /^((build|chore|ci|docs?|feat|fix|perf|refactor|rft|style|test|i18n|typo)[\:\.\(\,]|[Rr]evert|[Rr]elease)/;
            const invalidCommits = commits.filter(commit => !regex.test(commit.commit.message) || commit.parents.length > 1);

            console.log(`Checked ${commits.length} commit(s)`);

            if (invalidCommits.length > 0) {
              const invalidCommitNames = invalidCommits.map(commit => commit.commit.message);
              const invalidCommitInfoList = invalidCommits.map(commit => `- ${commit.commit.message.split("\n")[0]} [\`${commit.sha.substring(0, 7)}\`](${commit.html_url})`).join("\n");

              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `## ⚠️ Found ${invalidCommits.length} invalid commit(s):\n\n${invalidCommitInfoList}\n\n---\nPlease follow the [Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/) format.`
              });

              core.setFailed(`Found ${invalidCommits.length} invalid commit(s):\n${invalidCommitNames.join("\n-------------------\n")}`);
            }
